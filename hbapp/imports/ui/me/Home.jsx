import React, { Component } from 'react';
import { createContainer } from 'meteor/react-meteor-data';
import { Meteor } from 'meteor/meteor';
import _ from 'lodash';
import { Provider, connect } from 'react-redux';
import Store from '../../stores/store';
import { Avatar, RaisedButton } from 'material-ui';
import { Link } from 'react-router';

// import { lbl, getLanguage, setLanguage } from '/imports/intg/lang';

// style json
import JsonStyle from './me.json';
import Styler from '/imports/utils/Styler.js';

export default class Me extends Component {

  constructor(props) {
    super(props);
    this.isUser = !!Meteor.userId();
    this.page = new Styler(JsonStyle);
  }

  shouldComponentUpdate(nextProps, nextState) {
    // console.log('should component update ?')
    // console.log(nextProps,nextState)

    // This prevents 1 render when data is not yet supplied. 
    if (nextProps.subReady == false) {
      return false;
    }
    return true;
  }

  componentWillReceiveProps(nextProps) {

  }

  logout() {
    this.props.dispatch(userLogout());
  }

  onMyFolder() {
    this.props.router.push('me/my_folder');
  }

  onReleasing() {
    this.props.router.push('me/offplan_lists/editing');
  }

  onMyOffPlansList() {
    this.props.router.push('/me/offplan_lists');
  }

  onVersionNum() {
    this.props.dispatch(aboutDialogAction({
      title: "版本号",
      message: Meteor.settings.public.APP_VERSION,
    }));
  }

  onCustomerService() {
    const url = 'http://kefu.easemob.com/webim/im.html?tenantId=' + Meteor.settings.public.KEFU_TENANT_ID;
    let ref = window.open(url, '_blank', 'location=yes');
    // cordova.InAppBrowser.open('http://apache.org', '_blank', 'location=yes');
    ref.addEventListener('loadstop', function () {
      // insert scrpt here to inject into the pop up window(InAppBrowser)
      // set cookie to be 'root**** = xxxxxx'
      //  **** is the Backend tenant id, xxxx is the autogenerated UserId on the backend. 

      // TODO: first , grab the generated User ID from cookie when first time open Kefu. 
      // save it in user's profile. 
      // every time when open new kefu window, check if user alr has Kefu Id, if has, replace it. 
      // this way, user will always use same account contacting kefu. 

      // first line is removing remembered user id, 
      // second line is setting new user id,
      // third line to refresh it 
      ref.executeScript({
        code: `document.cookie='root34459' + '=;Path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
       document.cookie='root34459=webim-visitor-8Y8PHG74YKVWHY3B72QJ'; 
       if(document.cookie != 'root34459=webim-visitor-8Y8PHG74YKVWHY3B72QJ'){
         location.reload();
       }
       `});
    });
    console.log(ref)
    // ref.close();
  }

  // changeLanguage() {
  //   if (getLanguage() === 'en') {
  //     setLanguage('zh');
  //   } else {
  //     setLanguage('en');
  //   }
  // }


  render() {

    // console.log(this.props);
    // const avatar = Meteor.user() ? Meteor.user().profile.avatar : "/images/xue.jpg";
    // const phoneNum = Meteor.user() ? Meteor.user().phoneNum : '请登录';

    const avatar = "/images/xue.jpg";
    const phoneNum = "四海八荒第一绝色";

    console.log(phoneNum)

    let container;
    if (this.isUser) {
      container = <div style={{ padding: "1rem 1rem 0" }}>
        <div className="me-header" >
          <div className="container-fluid" style={{
            backgroundColor: "azure",
            border: "1px solid"
          }}>
            <div className="row">
              <div className="col-xs-7 ">
                <p><span>代号：</span><span>{phoneNum}</span></p>
                <p>something that introduce yourself</p>
              </div>
              <div className="col-xs-5 text-right">
                <Avatar src={avatar} size={80} />
              </div>
            </div>
          </div>
        </div>

        <div className="first">
          <RaisedButton label="我的收藏" className="commonRB firstRB"
            labelColor="#424242"
            buttonStyle={{
              textAlign: "left",
              borderBottom: "#e3e3e3 solid 1px"
            }}
            labelStyle={{ fontSize: "16px" }}
            style={{
              width: "100%",
              height: "40px",
              lineHeight: "40px",
              marginTop: "15px"
            }}
            onClick={this.onMyFolder.bind(this)}
            icon={<i className="icon-heart commonIcon" {...this.page.style("commonIcon") } />} >
            <i className="fa fa-chevron-right commonRight"  {...this.page.style("commonRight") } ></i>
          </RaisedButton>
          <RaisedButton label="我的信息" className="commonRB"
            {...this.page.style("commonRB") }
            onClick={this.onMyOffPlansList.bind(this)}
            icon={<i className="fa fa-smile-o commonIcon" {...this.page.style("commonIcon") } />} >
            <i className="fa fa-chevron-right commonRight" {...this.page.style("commonRight") }></i>
          </RaisedButton>
          <RaisedButton label="个人资料" className="commonRB"
            {...this.page.style("commonRB") }
            onClick={this.onMyOffPlansList.bind(this)}
            icon={<i className="icon-user commonIcon" {...this.page.style("commonIcon") } />} >
            <i className="fa fa-chevron-right commonRight" {...this.page.style("commonRight") }></i>
          </RaisedButton>
        </div>

        <RaisedButton label="账号资料" className="commonRB firstRB"
          {...this.page.style("commonRB", "firstRB") }
          onClick={this.onMyFolder.bind(this)}
          icon={<i className="fa fa-user-circle commonIcon" {...this.page.style("commonIcon") } />} >
          <i className="fa fa-chevron-right commonRight"  {...this.page.style("commonRight") } ></i>
        </RaisedButton>
        <RaisedButton label="历史资料" className="commonRB"
          {...this.page.style("commonRB") }
          onClick={this.onMyOffPlansList.bind(this)}
          icon={<i className="fa fa-history commonIcon" {...this.page.style("commonIcon") } />} >
          <i className="fa fa-chevron-right commonRight" {...this.page.style("commonRight") }></i>
        </RaisedButton>

        <RaisedButton label="我的合约" className="commonRB firstRB"
          {...this.page.style("commonRB", "firstRB") }
          onClick={this.onMyFolder.bind(this)}
          icon={<i className="fa fa-file-text-o commonIcon" {...this.page.style("commonIcon") } />} >
          <i className="fa fa-chevron-right commonRight"  {...this.page.style("commonRight") } ></i>
        </RaisedButton>
        <RaisedButton label="我的账单" className="commonRB"
          {...this.page.style("commonRB") }
          onClick={this.onMyOffPlansList.bind(this)}
          icon={<i className="fa fa-credit-card commonIcon" {...this.page.style("commonIcon") } />} >
          <i className="fa fa-chevron-right commonRight" {...this.page.style("commonRight") }></i>
        </RaisedButton>

        <RaisedButton label="APP信息" className="commonRB firstRB"
          {...this.page.style("commonRB", "firstRB") }
          onClick={this.onMyFolder.bind(this)}
          icon={<i className="icon-info commonIcon" {...this.page.style("commonIcon") } />} >
          <i className="fa fa-chevron-right commonRight"  {...this.page.style("commonRight") } ></i>
        </RaisedButton>
        <RaisedButton label="设定" className="commonRB"
          {...this.page.style("commonRB") }
          onClick={this.onMyOffPlansList.bind(this)}
          icon={<i className="icon-settings commonIcon" {...this.page.style("commonIcon") } />} >
          <i className="fa fa-chevron-right commonRight" {...this.page.style("commonRight") }></i>
        </RaisedButton>


        <RaisedButton label="退出登录" className="loginoutRB"
          {...this.page.style("loginoutRB") }
          onClick={this.logout.bind(this)} />








      </div >

    } else {
      container = <div>
        <Link to='/user_login' >
          <RaisedButton label="点击登录" className="loginoutRB"
            {...this.page.style("loginoutRB") }
          />
        </Link>
      </div>
    }

    return (
      <div>
        <div style={{
          width: "100%",
          backgroundColor: "#e3e3e3"
        }}>
          {container}
        </div>
        {this.props.children}
      </div>
    );
  }
}

